name: Development Docker images
on:
    pull_request:
    push:
        branches:
          - main
    workflow_dispatch:
env:
    IMAGE_NAME: ask-js
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
    push-ghcr:
        name: Build and push dev containers
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - name: Checkout Push to Registry action
              uses: actions/checkout@v4
              with:
                fetch-depth: 1

            - uses: sigstore/cosign-installer@v3.8.1
              if: github.event_name != 'pull_request'

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v3.0.0
              with:
                platforms: linux/amd64,linux/arm64

            - name: Image Metadata
              uses: docker/metadata-action@v5
              id: meta
              with:
                  images: |
                      ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
                  labels: |
                      org.opencontainers.image.title=${{ env.IMAGE_NAME }}
                      org.opencontainers.image.description=multiuser ask software
                  tags: |
                      type=sha
                      type=ref,event=pr
                      type=raw,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }},value=dev
                  # https://github.com/docker/metadata-action/issues/84

            - name: Setup cache
              uses: actions/cache@v3
              id: cache
              with:
                  path: |
                    var-cache
                    root-npm
                    app-pnpm
                    app-modules
                    app-backend-modules
                    app-frontend-modules
                  key: cache-${{ hashFiles('Dockerfile') }}

            - name: Inject cache into Docker
              uses: reproducible-containers/buildkit-cache-dance@v3
              with:
                cache-map: |
                    {
                    "var-cache": "/var/cache",
                    "root-npm": "/root/.npm",
                    "app-pnpm": "/app/.local/share/pnpm",
                    "app-modules": "/app/node_modules",
                    "app-backend-modules": "/app/packages/backend/node_modules",
                    "app-frontend-modules": "/app/packages/frontend/node_modules"
                    }
                skip-extraction: ${{ steps.cache.outputs.cache-hit }}

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              if: github.event_name != 'pull_request'
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and Push to GHCR
              id: build
              uses: docker/build-push-action@v5
              with:
                builder: ${{ steps.buildx.outputs.name }}
                context: .
                push: ${{ github.event_name != 'pull_request' }}
                platforms: ${{ steps.buildx.outputs.platforms }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

            - name: Sign container image
              if: github.event_name != 'pull_request'
              run: |
                images=""
                for tag in ${TAGS}; do
                    images+="${tag}@${DIGEST} "
                done
                cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
              env:
                DIGEST: ${{ steps.build.outputs.digest }}
                TAGS: ${{ steps.meta.outputs.tags }}
                COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
